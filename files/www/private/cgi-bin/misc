#!/usr/bin/haserl
content-type: text/plain

<%
. /www/private/cgi-bin/shared.sh

case $GET_func in
  reboot)
    reboot
    echo "(I) Bitte warten. Neustart wird durchgef&uuml;hrt..."
  ;;
  mac2ip)
    /sbin/mac2ip "$GET_mac"
  ;;
  status)
    print() { echo "status.data.$1=$2"; }
    print 'ip' `get_ip br-mesh`
    up=`uptime`
    print 'load' "${up##*:}"
    uptime="${up%%,*}"
    print 'uptime' "${uptime##*up}"
    print 'uname' "`uname -s -m -r`"
    print 'date' "`date`"
    wan_interfaces=`uci -q get network.wan.ifname`
    wan_interface=${wan_interfaces%% *} #get first interface
    [ -n "`get_ip $wan_interface`" ] && has_internet="Ja" || has_internet="Nein"   
    print 'has_internet' "$has_internet"
    share=`uci -q get freifunk.@settings[0].share_internet`
    [ "$share" = "yes" ] && share="Ja" || share="Nein"
    print 'share_internet' "$share"
    gw_mode=`batctl gw 2> /dev/null`
    [ "${gw_mode:0:6}" = "server" ] && is_gw="Ja" || is_gw="Nein"
    print 'is_gw' $is_gw
    print 'node_count' $((`batctl tg | grep '^ \*' | cut -b 33-49 | sort | uniq | wc -l`+1))
    print 'neigh_count' `batctl o | grep '^[[:digit:]|[:lower:]]' | cut -b 37-53 | sort | uniq | wc -l`
    print 'firmware_version' "`uci -q get freifunk.@settings[0].version`"
    print 'tinc_version' "`tincd --version 2>&1 | head -n1 | sed -n -r 's/.* ([0-9]*\.[0-9\.]*) .*/\1/p'`"
    print 'n2n_version' "`edge --help 2>&1 | head -n1 | sed -n -r 's/.*(v[0-9\.]*).*/\1/p'`"
    print 'batman_version' "`cat /sys/module/batman_adv/version 2> /dev/null`"
  ;;
  *)
  echo "(E) misc: Invalid command: '$GET_func'"
  ;;
esac
%>
